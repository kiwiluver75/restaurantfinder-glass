package com.google.android.glass.sample.compass;


import com.google.android.glass.media.Sounds;
import com.google.android.glass.widget.CardBuilder;
import com.google.android.glass.widget.CardScrollAdapter;
import com.google.android.glass.widget.CardScrollView;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.media.AudioManager;
import android.os.Bundle;
import android.util.Log;
import android.view.ContextMenu;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;

import java.util.ArrayList;
import java.util.List;

/**
 * An {@link android.app.Activity} showing a tuggable "Hello World!" card.
 * <p>
 * The main content view is composed of a one-card {@link com.google.android.glass.widget.CardScrollView} that provides tugging
 * feedback to the user when swipe gestures are detected.
 * If your Glassware intends to intercept swipe gestures, you should set the content view directly
 * and use a {@link com.google.android.glass.touchpad.GestureDetector}.
 * @see <a href="https://developers.google.com/glass/develop/gdk/touch">GDK Developer Guide</a>
 */
public class MainActivity extends Activity {

    /** {@link com.google.android.glass.widget.CardScrollView} to use as the main content view. */
    private CardScrollAdapter mAdapter;
    private CardScrollView mCardScroller;

    // /** "Hello World!" {@link View} generated by {@link #buildView()}. */
    private View mView;

    @Override
    protected void onCreate(Bundle bundle) {
        /*
        super.onCreate(bundle);

        mView = buildView();

        mCardScroller = new CardScrollView(this);
        mCardScroller.setAdapter(new CardScrollAdapter() {
            @Override
            public int getCount() {
                return 1;
            }

            @Override
            public Object getItem(int position) {
                return mView;
            }

            @Override
            public View getView(int position, View convertView, ViewGroup parent) {
                return mView;
            }

            @Override
            public int getPosition(Object item) {
                if (mView.equals(item)) {
                    return 0;
                }
                return AdapterView.INVALID_POSITION;
            }
        });

        // Handle the TAP event.
        mCardScroller.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                // Plays disallowed sound to indicate that TAP actions are not supported.
                AudioManager am = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
                am.playSoundEffect(Sounds.DISALLOWED);
            }
        });

        setContentView(mCardScroller);
        */
        super.onCreate(bundle);


        ArrayList<CardBuilder> cards = new ArrayList<CardBuilder>();

        cards.add(0, new CardBuilder(this, CardBuilder.Layout.TEXT).setText("Compass"));
        cards.add(1, new CardBuilder(this, CardBuilder.Layout.TEXT).setText("Menu"));
        cards.add(2, new CardBuilder(this, CardBuilder.Layout.TEXT).setText("Reviews"));
        cards.add(3, new CardBuilder(this, CardBuilder.Layout.TEXT).setText("Hours"));

        mAdapter = new CardAdapter( cards );
        mCardScroller = new CardScrollView(this);
        mCardScroller.setAdapter(mAdapter);
        setContentView(mCardScroller);
        setCardScrollerListener();
    }

    private void setCardScrollerListener() {
        mCardScroller.setOnItemClickListener(new AdapterView.OnItemClickListener() {

            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                switch (position) {
                    case 0:
                        setContentView(R.layout.compass);
                        startActivity(new Intent(MainActivity.this, CompassService.class));
                        break;
                    case 1:
                        startActivity(new Intent(MainActivity.this, Menus.class));
                        break;

                    case 2:
                        startActivity(new Intent(MainActivity.this, Reviews.class));
                        break;

                    case 3:
                        startActivity(new Intent(MainActivity.this, Hours.class));
                        break;
                }
                AudioManager am = (AudioManager) getSystemService(Context.AUDIO_SERVICE);
                am.playSoundEffect(Sounds.TAP);
            }
        });
    }


    @Override
    protected void onResume() {
        super.onResume();
        mCardScroller.activate();
    }

    @Override
    protected void onPause() {
        mCardScroller.deactivate();
        super.onPause();
    }

}
